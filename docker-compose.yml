version: "4"

services:
  # Eureka Server (Service Discovery)
  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    image: eureka-server:1.0.0
    ports:
      - "8761:8761"  # Eureka Dashboard
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  # RabbitMQ (Message Broker)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices-network
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password

  # Пример микросервиса 1: User Service
  cdr-service:
    build:
      context: ./cdr
      dockerfile: Dockerfile
    container_name: cdr-service
    ports:
      - "8081:8081"
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      - eureka-server
      - rabbitmq

  # Пример микросервиса 2: Order Service
#  brt-service:
#    build:
#      context: ./brt
#      dockerfile: Dockerfile
#    container_name: order-service
#    ports:
#      - "8082:8082"
#    networks:
#      - microservices-network
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
#      - SPRING_RABBITMQ_HOST=rabbitmq
#    depends_on:
#      - eureka-server
#      - rabbitmq

networks:
  microservices-network:
    driver: bridge